/*
Отправка логов в Loki
Логи пушатся в Loki API
по адресу `http://loki:3100/loki/api/v1/push`.
*/
loki.write "local" {

    endpoint {
      url = "http://loki:3100/loki/api/v1/push"
    }

}


/*
Обнаружение Docker-контейнеров
Сканирует Docker через сокет unix:///var/run/docker.sock*.
Обновление списка контейнеров каждые 5 секунд.
*/
discovery.docker "containers" {

    host                = unix:///var/run/docker.sock
    refresh_interval    = 5s

}


/*
Извлекает имя контейнера → 'container '
Добавляет статические метки:
job=docker*
host=<hostname>.
Создаёт метку service из имени контейнера.
Добавляет метку stream (stdout/stderr).
*/
discovery.relabel "containers" {

    targets = discovery.docker.containers.targets

    rule = {
        source_labels   = ["__meta_docker_container_name"]
        regex           = "/(.*)"
        target_label    = "container"
    }

    rule = {
        target_label = "job"
        replacement = "docker"
    }

    rule = {
        target_label = "host"
        replacement = containers.hostname
    }

    rule = {
            source_labels   = ["__meta_docker_container_name"]
            regex           = "/(.*)"
            target_label    = "service"
    }

    rule = {
            source_labels   = ["__meta_docker_container_log_stream"]
            target_label    = "stream"
    }


}

/*
Источник логов из контейнеров
Читает логи всех Docker-контейнеров.
Применяет правила relabel.
Отправляет логи в Loki.
*/
loki.source.docker "containers" {

    host            = "unix: ///var/run/docker.sock"
    targets         = discovery.docker.containers.targets
    relabel_rules   = discover.relabel.containers.rules
    forward_to      = [loki.write.local.receiver]
}

/*
Приёмник OpenTelemetry (OTLP)
Слушает traces/metrics* на портах 4317 (gRPC) и 4318 (НТТР).
Трейсы перенаправляются в Теmро.
Метрики -> в Prometheus.
*/
otel.receiver.otlp "default" {

    grpc {
        endpoint = "0.0.0.0:4317"
    }

    http {
        endpoint = "0.0.0.0:4318"
    }

    output {
        traces = [otelcol.exporter.otlp.tempo.input]
        metrics = [otelcol.exporter.otlp.prometheus.input]
    }
}

/*
Экспортеры
Tempo - получает трейсы, работает без TLS (insecure=true).
*/
otelcol.exporter.otlp "tempo" {
    client {
        endpoint = "tempo:4317"
        tls {
            insecure = true
        }
    }
}

/*
Прием метрик
*/
otelcol.exporter.prometheus "default" {
    forward_to = []
}



